// <auto-generated />
using System;
using MKW.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MKW.Data.Context.Migrations
{
    [DbContext(typeof(MKWContext))]
    [Migration("20230425181003_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<int>("PlatformCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("PlatformCategoryId");

                    b.ToTable("TB_MKW_CONTENT", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.ContentGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<int>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("CONTENT_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("GENRE_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("GenreId");

                    b.ToTable("TB_MKW_CONTENT_GENRE", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.ToTable("TB_MKW_GENRE", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("TB_MKW_PLATFORM", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.PlatformCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int")
                        .HasColumnName("PLATFORM_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("TB_MKW_PLATFORM_CATEGORY", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.PremiumPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<bool>("AutoRenewal")
                        .HasColumnType("bit")
                        .HasColumnName("AUTORENEWAL");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("END_DATE");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PERSON_ID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("START_DATE");

                    b.Property<int>("TierPlanId")
                        .HasColumnType("int")
                        .HasColumnName("TIER_PLAN_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TierPlanId");

                    b.ToTable("TB_PRM_PREMIUM_PERSON", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.Tier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit")
                        .HasColumnName("IS_PREMIUM");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.ToTable("TB_PRM_TIER", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.TierPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<int>("TierId")
                        .HasColumnType("int")
                        .HasColumnName("TIER_ID");

                    b.Property<int>("TimespanId")
                        .HasColumnType("int")
                        .HasColumnName("TIMESPAN_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("TierId");

                    b.HasIndex("TimespanId");

                    b.ToTable("TB_PRM_TIER_PLAN", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.Timespan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("DAYS");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.ToTable("TB_PRM_TIMESPAN", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int?>("ParentComentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_COMMENT_ID");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PERSON_ID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("ParentComentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PostId");

                    b.ToTable("TB_RVW_COMMENT", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.CommentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("COMMENT_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TEXT");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.ToTable("TB_RVW_COMMENT_DETAILS", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<int>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("CONTENT_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PERSON_ID");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("PersonId");

                    b.ToTable("TB_RVW_POST", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.PostDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALTER_DATE");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITLE");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("TB_RVW_POST_DETAILS", (string)null);
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.AgeRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinalAge")
                        .HasColumnType("int");

                    b.Property<int>("InitialAge")
                        .HasColumnType("int");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AgeRange");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBinary")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneCountry")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.PersonChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AgeRangeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AlterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgeRangeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonChild");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Content", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ContentAggregate.PlatformCategory", "PlatformCategory")
                        .WithMany("Contents")
                        .HasForeignKey("PlatformCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlatformCategory");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.ContentGenre", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ContentAggregate.Content", "Content")
                        .WithMany("ContentGenre")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.ContentAggregate.Genre", "Genre")
                        .WithMany("ContentGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.PlatformCategory", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ContentAggregate.Platform", "Platform")
                        .WithMany("PlatformCategories")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.PremiumPerson", b =>
                {
                    b.HasOne("MKW.Domain.Entities.UserAggregate.Person", "Person")
                        .WithMany("PremiumPerson")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.PremiumAggregate.TierPlan", "TierPlan")
                        .WithMany("PremiumPerson")
                        .HasForeignKey("TierPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("TierPlan");
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.TierPlan", b =>
                {
                    b.HasOne("MKW.Domain.Entities.PremiumAggregate.Tier", "Tier")
                        .WithMany("TierPlans")
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.PremiumAggregate.Timespan", "Timespan")
                        .WithMany("TierPlans")
                        .HasForeignKey("TimespanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tier");

                    b.Navigation("Timespan");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Comment", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ReviewAggregate.Comment", "ParentComment")
                        .WithMany("Answers")
                        .HasForeignKey("ParentComentId");

                    b.HasOne("MKW.Domain.Entities.UserAggregate.Person", "Person")
                        .WithMany("Comments")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.ReviewAggregate.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentComment");

                    b.Navigation("Person");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.CommentDetails", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ReviewAggregate.Comment", "Comment")
                        .WithMany("CommentDetails")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Post", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ContentAggregate.Content", "Content")
                        .WithMany("Posts")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.UserAggregate.Person", "Person")
                        .WithMany("Posts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.PostDetails", b =>
                {
                    b.HasOne("MKW.Domain.Entities.ReviewAggregate.Post", "Post")
                        .WithMany("PostDetails")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.Person", b =>
                {
                    b.HasOne("MKW.Domain.Entities.UserAggregate.Gender", "Gender")
                        .WithMany("People")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.PersonChild", b =>
                {
                    b.HasOne("MKW.Domain.Entities.UserAggregate.AgeRange", "AgeRange")
                        .WithMany("Children")
                        .HasForeignKey("AgeRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.UserAggregate.Gender", "Gender")
                        .WithMany("Children")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKW.Domain.Entities.UserAggregate.Person", "Person")
                        .WithMany("Children")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeRange");

                    b.Navigation("Gender");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Content", b =>
                {
                    b.Navigation("ContentGenre");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Genre", b =>
                {
                    b.Navigation("ContentGenre");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.Platform", b =>
                {
                    b.Navigation("PlatformCategories");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ContentAggregate.PlatformCategory", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.Tier", b =>
                {
                    b.Navigation("TierPlans");
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.TierPlan", b =>
                {
                    b.Navigation("PremiumPerson");
                });

            modelBuilder.Entity("MKW.Domain.Entities.PremiumAggregate.Timespan", b =>
                {
                    b.Navigation("TierPlans");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Comment", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("CommentDetails");
                });

            modelBuilder.Entity("MKW.Domain.Entities.ReviewAggregate.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostDetails");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.AgeRange", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.Gender", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("People");
                });

            modelBuilder.Entity("MKW.Domain.Entities.UserAggregate.Person", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("PremiumPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
